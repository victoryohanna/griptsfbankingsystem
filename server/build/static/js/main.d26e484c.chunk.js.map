{"version":3,"sources":["components/NavBar.jsx","components/Customers.jsx","components/Banner.jsx","components/footer.jsx","components/Main.jsx","components/Tranfer.jsx","components/MoneyTranferDetails.jsx","components/CustomerDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Customers","props","getCustomers","a","axios","get","URL","then","result","data","response","slice","state","offset","perPage","setState","pageCount","Math","ceil","length","customers","isLoading","handlePageClick","e","selectedPage","selected","currentPage","bind","this","match","color","height","width","map","item","index","key","firstName","middleName","lastName","gender","email","phoneNumber","url","userId","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Component","Banner","children","title","subtitle","Footer","target","Main","Transfer","accountNumber","TransferDetails","handleChange","name","value","getCustomerById","params","res","filter","forEach","customer","transferFund","preventDefault","balance","Number","currentBalance","received","amount","totalAmount","fund","transactionId","floor","random","initialBalance","amountReceived","newBalance","depositor","depositorName","depositorNumber","date","Date","post","update","address","put","onSubmit","onChange","formNoValidate","CustomerDetails","getCustomerDetails","App","exact","path","component","MoneyTransferDetails","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d26e484c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaAlignJustify } from \"react-icons/fa\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n      <div className=\"nav-body\">\r\n          <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-lg\">\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\">\r\n        <FaAlignJustify className=\"nav-icon\" />\r\n        </span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav my-4\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/customers\" className=\"nav-link\">\r\n              Customers\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/transfer\" className=\"nav-link\">\r\n              Fund Transfer\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n          </div>\r\n\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst URL = \"https://tsfgripbank.herokuapp.com/\"\r\n\r\nclass Customers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n     \r\n      isLoading: true,\r\n      offset: 0,\r\n      perPage: 5,\r\n      currentPage: 0,\r\n    };\r\n\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n  }\r\n\r\n  getCustomers = async () => {\r\n    await axios.get(URL + \"customers\").then((result) => {\r\n      const data = result.data.response;\r\n      const slice = data.slice(\r\n        this.state.offset,\r\n        this.state.offset + this.state.perPage\r\n      );\r\n\r\n      this.setState({\r\n        pageCount: Math.ceil(data.length / this.state.perPage),\r\n        customers: slice,\r\n        isLoading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState(\r\n      {\r\n        currentPage: selectedPage,\r\n        offset: offset,\r\n      },\r\n      () => {\r\n        this.getCustomers();\r\n      }\r\n    );\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    const data = this.state.customers;\r\n   \r\n    let match = this.props.match;\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h3>Customers</h3>\r\n            </div>\r\n            {this.state.isLoading ? (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <ReactLoading\r\n                  type={\"spinningBubbles\"}\r\n                  color={\"grey\"}\r\n                  height={\"8%\"}\r\n                  width={\"8%\"}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"table-responsive-sm\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Firt Name</th>\r\n                      <th>Middle Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Gender</th>\r\n                      <th>Email</th>\r\n                      <th>Phone Number</th>\r\n                      <th>Customer Details</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td className=\"table-row\">{item.firstName}</td>\r\n                          <td className=\"table-row\">{item.middleName}</td>\r\n                          <td className=\"table-row\">{item.lastName}</td>\r\n                          <td className=\"table-row\">{item.gender}</td>\r\n                          <td className=\"table-row\">{item.email}</td>\r\n                          <td className=\"table-row\">{item.phoneNumber}</td>\r\n                          <td className=\"table-row\">\r\n                            <button className=\"btn-view\">\r\n                              <Link\r\n                                to={`${match.url}/${item.userId}`}\r\n                                className=\"link\"\r\n                              >\r\n                                View Details\r\n                              </Link>\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={this.state.pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={this.handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nexport default function Banner({ children, title, subtitle }) {\r\n  return (\r\n    <div className=\"banner\">\r\n      <h4> {title} </h4>   \r\n      <div></div>\r\n      <p> {subtitle}</p>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FaFacebook, FaLinkedin, FaTwitter } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (  \r\n      <div className=\" d-flex justify-content-center pt-4 my-md-5 pt-md-5 footer \">\r\n        <div className=\"row row-footer \">\r\n          <div className=\"col-12 col-md\">\r\n            <small className=\"-block mb-3 text-muted\">&copy; 2020</small>\r\n          </div>\r\n          <div className=\"col-6 col-md\">\r\n            <h5>About</h5>\r\n            <ul className=\"list-unstyled text-small\">\r\n              <li>\r\n                <Link to=\"/\" className=\"text-muted\">\r\n                  Team\r\n                </Link>\r\n              </li>\r\n\r\n              <li>\r\n                <Link to=\"/\" className=\"text-muted\">\r\n                  Privacy\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/\" className=\"text-muted\">\r\n                  Terms\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-6 col-md\">\r\n            <h5>Features</h5>\r\n            <ul className=\"list-unstyled text-small\">\r\n              <li>\r\n                <Link to=\"/\" className=\"text-muted\">\r\n                  FAQ\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/\" className=\"text-muted\">\r\n                  Testimonials\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/\" className=\"text-muted\">\r\n                  Careers\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-6 col-md \">\r\n            <h5>Follow Us</h5>\r\n            <ul className=\"list-unstyled text-small\">\r\n              <li>  \r\n                <Link\r\n                  to=\"https://www.facebook.com/signup\"\r\n                  target=\"_blank\"\r\n                  className=\"footer-img\"\r\n                >\r\n                  <FaFacebook />\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to=\"https://twitter.com/i/flow/signup\"    \r\n                  target=\"_blank\"\r\n                  className=\"footer-img\"\r\n                >\r\n                  <FaTwitter />\r\n                </Link>\r\n              </li>\r\n\r\n              <li>\r\n                <Link\r\n                  to=\"https://www.linkedin.com/signup\"\r\n                  target=\"_blank\"\r\n                  className=\"footer-img\"\r\n                >\r\n                  <FaLinkedin />\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Banner from \"./Banner\";\r\nimport Footer from \"./footer\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"main\">\r\n          <Banner\r\n            title=\"GRIP BANKING SYSTEM\"\r\n            subtitle=\"Thank you for banking with us\"\r\n          >\r\n            <Link to=\"/transfer\" className=\"btn-main\">\r\n              Transfer Fund\r\n            </Link>\r\n          </Banner>\r\n        </div>\r\n        <hr />\r\n        <div className=\"section-footer\">\r\n          <Footer />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst URL = \"https://tsfgripbank.herokuapp.com/\"\r\n\r\nclass Transfer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      isLoading: true,\r\n      offset: 0,\r\n      perPage: 5,\r\n      currentPage: 0,\r\n    };\r\n\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n  }\r\n  getCustomers = async () => {\r\n    await axios.get(URL + \"customers\").then((result) => {\r\n      const data = result.data.response;\r\n      const slice = data.slice(\r\n        this.state.offset,\r\n        this.state.offset + this.state.perPage\r\n      );\r\n      this.setState({\r\n        pageCount: Math.ceil(data.length / this.state.perPage),\r\n        customers: slice,\r\n        isLoading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState(\r\n      {\r\n        currentPage: selectedPage,\r\n        offset: offset,\r\n      },\r\n      () => {\r\n        this.getCustomers();\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const data = this.state.customers;\r\n    let match = this.props.match;\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h3>Fund Transfer</h3>{\" \"}\r\n            </div>\r\n            {this.state.isLoading ? (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <ReactLoading\r\n                  type={\"spinningBubbles\"}\r\n                  color={\"grey\"}\r\n                  height={\"8%\"}\r\n                  width={\"8%\"}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"table-responsive-sm\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Firt Name</th>\r\n                      <th>Middle Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Gender</th>\r\n                      <th>Account N0</th>\r\n                      <th>Phone Number</th>\r\n                      <th>Send Money</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td className=\"table-row\">{item.firstName}</td>\r\n                          <td className=\"table-row\">{item.middleName}</td>\r\n                          <td className=\"table-row\">{item.lastName}</td>\r\n                          <td className=\"table-row\">{item.gender}</td>\r\n                          <td className=\"table-row\">{item.accountNumber}</td>\r\n                          <td className=\"table-row\">{item.phoneNumber}</td>\r\n                          <td className=\"table-row\">\r\n                            <button className=\"btn-view\">\r\n                              <Link\r\n                                to={`${match.url}/${item.userId}`}\r\n                                className=\"link\"\r\n                              >\r\n                                Select\r\n                              </Link>\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={this.state.pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={this.handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transfer;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst URL = \"https://tsfgripbank.herokuapp.com/\"\r\n\r\nclass TransferDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      customer: {},\r\n      depositorName: \"\",\r\n      depositorNumber: \"\",\r\n      amount: \"\",\r\n      email: \"\",\r\n    };\r\n\r\n    this.transferFund = this.transferFund.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomerById();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Retrieve Customer  with  matching ID\r\n  getCustomerById = async () => {\r\n    let id = this.props.match.params.id;\r\n\r\n    await axios.get(URL + \"customers\").then((res) => {\r\n      this.setState({\r\n        customers: res.data.response,\r\n      });\r\n    });\r\n    const customers = this.state.customers;\r\n\r\n    //Filter Customer by Id\r\n    let filterCustomer = customers.filter(function (e) {\r\n      return e.userId === id;\r\n    });\r\n\r\n    filterCustomer.forEach((item) => {\r\n      this.setState({\r\n        customer: item,\r\n      });\r\n    });\r\n\r\n    return this.state.customer;\r\n  };\r\n\r\n  transferFund = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = this.state.customer;\r\n    let balance = Number(data.currentBalance);\r\n    let received = this.state.amount;\r\n    let totalAmount = Number(balance) + Number(received);\r\n\r\n    const fund = {\r\n      transactionId: Math.floor(Math.random() * 100000) + 1,\r\n      customer: {\r\n        firstName: data.firstName,\r\n        middleName: data.middleName,\r\n        lastName: data.lastName,\r\n        gender: data.gender,\r\n        accountNumber: data.accountNumber,\r\n        initialBalance: data.currentBalance,\r\n        amountReceived: received,\r\n        newBalance: totalAmount,\r\n      },\r\n      depositor: {\r\n        name: this.state.depositorName,\r\n        phoneNumber: this.state.depositorNumber,\r\n        email: this.state.email,\r\n      },\r\n      date: new Date(),\r\n    };\r\n\r\n    await axios.post(URL + \"transfer\", fund).then((result) => {\r\n    \r\n      if (result) {\r\n        const update = {\r\n          userId: data.userId,\r\n          firstName: data.firstName,\r\n          middleName: data.middleName,\r\n          lastName: data.lastName,\r\n          gender: data.gender,\r\n          email: data.email,\r\n          phoneNumber: data.phoneNumber,\r\n          address: data.address,\r\n          accountNumber: data.accountNumber,\r\n          currentBalance: totalAmount,\r\n        };\r\n        axios.put(\"/customer-update\", update).then((response) => {\r\n\r\n          if (response) {\r\n            this.setState({\r\n              depositorName: \"\",\r\n              depositorNumber: \"\",\r\n              amount: \"\",\r\n              email: \"\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const data = this.state.customer;\r\n\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <div className=\"card card-transfer mx-auto\">\r\n          <div className=\"card-body d-flex justify-content-center\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 d-flex justify-content-center\">\r\n                <h5>Account Owner</h5>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <dl>\r\n                  <dt>First Name</dt>\r\n                  <dd>{data.firstName}</dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <dl>\r\n                  <dt>Middle Name</dt>\r\n                  <dd>{data.middleName}</dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <dl>\r\n                  <dt>last Name</dt>\r\n                  <dd>{data.lastName}</dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <dl>\r\n                  <dt>Gender</dt>\r\n                  <dd>{data.gender}</dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <dl>\r\n                  <dt>Email</dt>\r\n                  <dd>{data.email}</dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <dl>\r\n                  <dt>Account Number</dt>\r\n                  <dd>{data.accountNumber}</dd>\r\n                </dl>\r\n              </div>\r\n              <div className=\"card-body d-flex justify-content-center\">\r\n                <h6>Depositor's Details</h6>\r\n              </div>\r\n              <div>\r\n                <form type=\"form\" className=\"form\" onSubmit={this.transferFund}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 mx-auto\">\r\n                      <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"depositorName\"\r\n                          value={this.state.depositorName}\r\n                          onChange={this.handleChange}\r\n                          formNoValidate\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mx-auto\">\r\n                      <div className=\"form-group\">\r\n                        <label>Phone Number</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"depositorNumber\"\r\n                          value={this.state.depositorNumber}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mx-auto\">\r\n                      <div className=\"form-group\">\r\n                        <label>Amount</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"amount\"\r\n                          value={this.state.amount}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mx-auto\">\r\n                      <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <button type=\"submit\" className=\"btn-submit\">\r\n                      Transfer\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransferDetails;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst URL = \"https://tsfgripbank.herokuapp.com/\"\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      customer: {},\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomerDetails();\r\n  }\r\n\r\n  //Retrieve Customer  with  matching ID\r\n  getCustomerDetails = async () => {\r\n    let id = this.props.match.params.id;\r\n\r\n    await axios.get(URL + \"customers\").then((res) => {\r\n      this.setState({\r\n        customers: res.data.response,\r\n        isLoading: false,\r\n      });\r\n    });\r\n    const customers = this.state.customers;\r\n\r\n    //Filter Customer by Id\r\n    let filterCustomer = customers.filter(function (e) {\r\n      return e.userId === id;\r\n    });\r\n\r\n    filterCustomer.forEach((item) => {\r\n      this.setState({\r\n        customer: item,\r\n      });\r\n    });\r\n\r\n    return this.state.customer;\r\n  };\r\n\r\n  render() {\r\n    const data = this.state.customer;\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        {this.state.isLoading ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <ReactLoading\r\n              type={\"spinningBubbles\"}\r\n              color={\"grey\"}\r\n              height={\"8%\"}\r\n              width={\"8%\"}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"card card-transfer mx-auto\">\r\n            <div className=\"card-body d-flex justify-content-center\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 d-flex justify-content-center\">\r\n                  <h5>Customer Details</h5>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <dl>\r\n                    <dt>First Name</dt>\r\n                    <dd>{data.firstName}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <dl>\r\n                    <dt>Middle Name</dt>\r\n                    <dd>{data.middleName}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <dl>\r\n                    <dt>last Name</dt>\r\n                    <dd>{data.lastName}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <dl>\r\n                    <dt>Gender</dt>\r\n                    <dd>{data.gender}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <dl>\r\n                    <dt>Phone Number</dt>\r\n                    <dd>{data.phoneNumber}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <dl>\r\n                    <dt>Email</dt>\r\n                    <dd>{data.email}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <dl>\r\n                    <dt>Address</dt>\r\n                    <dd>{data.address}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <dl>\r\n                    <dt>Account Number</dt>\r\n                    <dd>{data.accountNumber}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <dl>\r\n                    <dt>Account Balance</dt>\r\n                    <dd>{data.currentBalance}</dd>\r\n                  </dl>\r\n                </div>\r\n                <div className=\"col-md-12\"></div>\r\n                <Link to=\"/customers\" className=\"btn-back\">\r\n                  Print \r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerDetails;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n//import './App.css';\nimport \"./styles/main.css\";\nimport NavBar from \"./components/NavBar\";\nimport Customers from \"./components/Customers\";\nimport Main from \"./components/Main\"\nimport Transfer from \"./components/Tranfer\"\nimport MoneyTransferDetails from \"./components/MoneyTranferDetails\"\nimport CustomerDetails from \"./components/CustomerDetails\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/customers\" component={Customers} />\n      <Route exact path=\"/transfer\" component={Transfer} />\n      <Route exact path=\"/transfer/:id\" component={MoneyTransferDetails} />\n      <Route exact path=\"/customers/:id\" component={CustomerDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <Router>  \n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}